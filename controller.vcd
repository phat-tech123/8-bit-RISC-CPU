$date
	Fri Feb  7 23:04:03 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module controller_tb $end
$var wire 1 ! skip $end
$var wire 1 " memWrite $end
$var wire 1 # memRead $end
$var wire 1 $ jump $end
$var wire 1 % Halt $end
$var wire 2 & ALU_OP [1:0] $end
$var wire 1 ' ALUToACC $end
$var wire 1 ( ACCwrite $end
$var reg 1 ) clk $end
$var reg 3 * opcode [2:0] $end
$scope module u_controller $end
$var wire 1 ) clk $end
$var wire 3 + opcode [2:0] $end
$var parameter 3 , ADD $end
$var parameter 3 - AND $end
$var parameter 3 . HLT $end
$var parameter 3 / JMP $end
$var parameter 3 0 LDA $end
$var parameter 3 1 SKZ $end
$var parameter 3 2 STO $end
$var parameter 3 3 XOR $end
$var reg 1 ( ACCwrite $end
$var reg 1 ' ALUToACC $end
$var reg 2 4 ALU_OP [1:0] $end
$var reg 1 % Halt $end
$var reg 1 $ jump $end
$var reg 1 # memRead $end
$var reg 1 " memWrite $end
$var reg 1 ! skip $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 3
b110 2
b1 1
b101 0
b111 /
b0 .
b11 -
b10 ,
$end
#0
$dumpvars
b0 4
b1 +
b1 *
0)
0(
0'
b0 &
0%
1$
0#
0"
0!
$end
#25
1)
#50
0)
#60
b100 *
b100 +
#75
1)
#80
b0 *
b0 +
#100
1%
0$
0)
#125
1)
#150
0)
#175
1)
#200
0)
#225
1)
#250
0)
#275
1)
#280
